/* tasks.css */
.tasks-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 1.5rem;
}

.tasks-container h1 {
    color: var(--text-primary);
    margin-bottom: 2rem;
    font-size: 2rem;
    font-weight: 700;
}

.task-filters {
    margin-bottom: 2rem;
    display: flex;
    gap: 1rem;
    align-items: center;
}

.filter-select {
    padding: 0.75rem 1rem;
    border-radius: 0.75rem;
    border: 1.5px solid var(--border-color);
    background: var(--surface);
    font-size: 0.875rem;
    min-width: 150px;
    color: var(--text-primary);
    transition: var(--transition-normal);
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
    padding-right: 2.5rem;
}

.filter-select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 4px color-mix(in srgb, var(--primary-color) 15%, transparent);
}

.task-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.task-item {
    background: var(--surface);
    padding: 1.5rem;
    border-radius: 1rem;
    box-shadow: var(--shadow-md);
    border: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    transition: var(--transition-normal);
}

.task-item:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

.task-item.completed {
    background: linear-gradient(to right, var(--surface), color-mix(in srgb, var(--success-color) 5%, var(--surface)));
}

.task-item.completed .task-content h3 {
    text-decoration: line-through;
    color: var(--text-secondary);
}

.task-content {
    flex: 1;
    margin-right: 1.5rem;
}

.task-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.75rem;
    gap: 1rem;
}

.task-header h3 {
    margin: 0;
    color: var(--text-primary);
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.4;
}

.task-description {
    color: var(--text-secondary);
    font-size: 0.875rem;
    line-height: 1.6;
    margin: 0;
}

.deadline {
    font-size: 0.75rem;
    color: var(--text-secondary);
    background: var(--background);
    padding: 0.5rem 0.75rem;
    border-radius: 0.5rem;
    white-space: nowrap;
    transition: var(--transition-normal);
}

.deadline.overdue {
    color: var(--error-color);
    background: color-mix(in srgb, var(--error-color) 10%, transparent);
}

.task-controls {
    display: flex;
    gap: 0.75rem;
    align-items: center;
}

.task-controls button {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    border-radius: 0.5rem;
    color: var(--text-secondary);
    transition: var(--transition-normal);
    display: flex;
    align-items: center;
    justify-content: center;
}

.task-controls button:hover {
    background: var(--background);
    color: var(--primary-color);
}

.checkbox-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
}

.checkbox-container input[type="checkbox"] {
    appearance: none;
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid var(--border-color);
    border-radius: 0.375rem;
    transition: var(--transition-normal);
    cursor: pointer;
    position: relative;
}

.checkbox-container input[type="checkbox"]:checked {
    background: var(--primary-color);
    border-color: var(--primary-color);
}

.checkbox-container input[type="checkbox"]:checked::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 0.75rem;
}

.add-task-btn {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 1rem;
    background: var(--primary-color);
    color: white;
    border: none;
    cursor: pointer;
    box-shadow: var(--shadow-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    transition: var(--transition-normal);
}

.add-task-btn:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: var(--shadow-xl);
    background: var(--primary-dark);
}

/* Task Modal */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: var(--transition-normal);
}

.modal:not(.hidden) {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background: var(--surface);
    padding: 2rem;
    border-radius: 1.5rem;
    box-shadow: var(--shadow-xl);
    max-width: 600px;
    width: 90%;
    transform: translateY(20px);
    transition: var(--transition-normal);
}

.modal:not(.hidden) .modal-content {
    transform: translateY(0);
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
}

.modal-header h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
}

.close {
    font-size: 1.5rem;
    color: var(--text-secondary);
    cursor: pointer;
    transition: var(--transition-normal);
}

.close:hover {
    color: var(--error-color);
}

.form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    margin-top: 2rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .task-header {
        flex-direction: column;
        gap: 0.75rem;
    }

    .deadline {
        width: 100%;
        text-align: center;
    }

    .task-controls {
        flex-direction: column;
        align-items: stretch;
        gap: 0.5rem;
    }

    .modal-content {
        padding: 1.5rem;
        margin: 1rem;
    }

    .add-task-btn {
        bottom: 1.5rem;
        right: 1.5rem;
    }
}